---
description: manmaru - 妊婦向け栄養管理アプリ開発ガイドライン
globs: 
alwaysApply: false
---
### 1. 開発の基本方針
- **モバイルファースト**: すべてのUIコンポーネントはモバイル表示を最優先
- **シンプルな操作性**: 妊婦さんが疲れた状態でも簡単に操作できるUI設計
- **App Router採用**: Next.js 15.2.0のApp Routerを活用した最新のルーティング設計
- **型安全性**: TypeScriptによる厳格な型チェック

技術スタック：
- Next.js 15.2.0 (App Router)
- TypeScript
- shadcn/ui
- Supabase
- TailwindCSS

カラースキーム:
- shadcn/uiのbase color zinc (green基調)
- 使用しているshadcn/uiコンポーネント一覧
  -button
  -card
  -dialog
  -input
  -label
  -radio-group
  -sonner
  -checkbox
  -progress
  -tabs

### 2. ディレクトリ構造
```
.
|-- README.md
|-- __tests__
|   `-- prompt-service.test.ts
|-- components.json
|-- eslint.config.mjs
|-- jest.config.js
|-- next-env.d.ts
|-- next.config.ts
|-- package-lock.json
|-- package.json
|-- postcss.config.mjs
|-- rendered-prompt.txt
|-- src
|   |-- app
|   |   |-- (authenticated)
|   |   |   |-- dashboard
|   |   |   |   `-- page.tsx
|   |   |   |-- home
|   |   |   |   `-- page.tsx
|   |   |   |-- layout.tsx
|   |   |   |-- meals
|   |   |   |   `-- log
|   |   |   |       `-- page.tsx
|   |   |   |-- profile
|   |   |   |   `-- page.tsx
|   |   |   |-- recipes
|   |   |   |   |-- [id]
|   |   |   |   |   |-- page.tsx
|   |   |   |   |   `-- recipes-client.tsx
|   |   |   |   |-- clip
|   |   |   |   |   |-- page.tsx
|   |   |   |   |   `-- recipe-clip-client.tsx
|   |   |   |   |-- page.tsx
|   |   |   |   `-- recipes-client.tsx
|   |   |   `-- settings
|   |   |       `-- page.tsx
|   |   |-- api
|   |   |   |-- analyze-image
|   |   |   |   `-- route.ts
|   |   |   |-- analyze-meal
|   |   |   |   `-- route.ts
|   |   |   |-- analyze-text-input
|   |   |   |   `-- route.ts
|   |   |   |-- calculate-nutrition
|   |   |   |   `-- route.ts
|   |   |   |-- meals
|   |   |   |   |-- [date]
|   |   |   |   |   `-- route.ts
|   |   |   |   |-- from-recipe
|   |   |   |   |   `-- route.ts
|   |   |   |   |-- range
|   |   |   |   |   `-- route.ts
|   |   |   |   |-- route.ts
|   |   |   |   `-- summary
|   |   |   |       `-- route.ts
|   |   |   |-- nutrition-advice
|   |   |   |   `-- route.ts
|   |   |   |-- recipes
|   |   |   |   |-- [id]
|   |   |   |   |   |-- favorite
|   |   |   |   |   `-- route.ts
|   |   |   |   |-- parse-url
|   |   |   |   |   `-- route.ts
|   |   |   |   |-- route.ts
|   |   |   |   `-- save
|   |   |   |       `-- route.ts
|   |   |   |-- recommend-recipes
|   |   |   |   `-- route.ts
|   |   |   `-- update-nutrition-log
|   |   |       `-- route.ts
|   |   |-- auth
|   |   |   |-- callback
|   |   |   |   `-- page.tsx
|   |   |   |-- login
|   |   |   |   `-- page.tsx
|   |   |   `-- register
|   |   |       `-- page.tsx
|   |   |-- favicon.ico
|   |   |-- globals.css
|   |   |-- layout.tsx
|   |   |-- page.tsx
|   |   `-- terms
|   |       `-- page.tsx
|   |-- components
|   |   |-- auth
|   |   |   |-- login-form.tsx
|   |   |   `-- register-form.tsx
|   |   |-- dashboard
|   |   |   |-- daily-nutrition-scores.tsx
|   |   |   |-- meal-history-list.tsx
|   |   |   |-- meal-summary.tsx
|   |   |   |-- nutrition-advice.tsx
|   |   |   |-- nutrition-chart.tsx
|   |   |   |-- pregnancy-week-info.tsx
|   |   |   |-- tabs-container.tsx
|   |   |   `-- weight-chart.tsx
|   |   |-- home
|   |   |   |-- action-card.tsx
|   |   |   |-- advice-card.tsx
|   |   |   |-- daily-record-card.tsx
|   |   |   |-- home-client.tsx
|   |   |   |-- nutrition-summary.tsx
|   |   |   |-- pregnancy-week-info.tsx
|   |   |   |-- progress-card.tsx
|   |   |   `-- recipe-preview.tsx
|   |   |-- layout
|   |   |   `-- bottom-navigation.tsx
|   |   |-- meals
|   |   |   |-- meal-photo-input.tsx
|   |   |   |-- meal-type-selector.tsx
|   |   |   `-- recognition-editor.tsx
|   |   |-- recipes
|   |   |   |-- add-to-meal-dialog.tsx
|   |   |   |-- recipe-card.tsx
|   |   |   `-- url-clip-form.tsx
|   |   `-- ui
|   |       |-- alert.tsx
|   |       |-- badge.tsx
|   |       |-- button.tsx
|   |       |-- calendar.tsx
|   |       |-- card.tsx
|   |       |-- checkbox.tsx
|   |       |-- dialog.tsx
|   |       |-- input.tsx
|   |       |-- label.tsx
|   |       |-- popover.tsx
|   |       |-- progress.tsx
|   |       |-- radio-group.tsx
|   |       |-- select.tsx
|   |       |-- slider.tsx
|   |       |-- sonner.tsx
|   |       |-- spinner.tsx
|   |       |-- tabs.tsx
|   |       `-- tooltip.tsx
|   |-- hooks
|   |   |-- useAuth.ts
|   |   |-- useMeals.ts
|   |   `-- useNutrition.ts
|   |-- lib
|   |   |-- ai
|   |   |   |-- ai-service.ts
|   |   |   |-- model-factory.ts
|   |   |   |-- prompts
|   |   |   |   |-- ab-testing
|   |   |   |   |   `-- test-strategies
|   |   |   |   |-- metrics
|   |   |   |   |   `-- metric-collector.ts
|   |   |   |   |-- prompt-service.ts
|   |   |   |   |-- prompt-utils.ts
|   |   |   |   |-- template-engine.ts
|   |   |   |   |-- templates
|   |   |   |   |   |-- food-analysis
|   |   |   |   |   |-- nutrition-advice
|   |   |   |   |   |-- recipe-recommendation
|   |   |   |   |   `-- text-input-analysis
|   |   |   |   `-- version-manager.ts
|   |   |   `-- response-parser.ts
|   |   |-- api.ts
|   |   |-- date-utils.ts
|   |   |-- errors
|   |   |   |-- ai-error.ts
|   |   |   |-- error-utils.ts
|   |   |   `-- food-analysis-error.ts
|   |   |-- nutrition
|   |   |   |-- calculator.ts
|   |   |   |-- database.ts
|   |   |   `-- nutritionUtils.ts
|   |   |-- nutrition-utils.ts
|   |   |-- supabase
|   |   |   `-- client.ts
|   |   |-- utils
|   |   |   |-- date-utils.ts
|   |   |   |-- date.ts
|   |   |   |-- image-utils.ts
|   |   |   |-- nutrition.ts
|   |   |   `-- profile.ts
|   |   `-- utils.ts
|   |-- middleware.ts
|   `-- types
|       |-- meal.ts
|       |-- nutrition.ts
|       |-- recipe.ts
|       `-- user.ts
|-- supabase
|   |-- config.toml
|   `-- migrations
|       `-- 20250317010051_add_recipe_clip_tables.sql
|-- tailwind.config.ts
|-- test-meal-image.jpg
|-- test-prompt.js
|-- tsconfig.json
`-- tsconfig.tsbuildinfo
```

### 3. コンポーネント設計方針
#### 3.1 認証関連（auth/）
- ログイン/登録フォームは最小限の入力項目
- Supabase Authを活用したシンプルな認証フロー
- エラーメッセージは分かりやすい日本語で表示

#### 3.2 食事記録（meals/）
- カメラ/写真アップロード機能を優先実装
- 食事記録の手動修正UIを分かりやすく
- オフライン対応を考慮したデータ保存

#### 3.3 ダッシュボード（dashboard/）
- 重要な栄養情報を一目で把握できるグラフ表示
- 色分けによる直感的な過不足表示
- レスポンシブな表示対応

### 4. AI機能実装のベストプラクティス
- **画像解析**: 
  - 撮影→解析→結果表示の流れをスムーズに
  - エラー時は手動入力へのフォールバック実装
- **栄養アドバイス**:
  - 専門用語を避けた分かりやすい文言
  - 妊娠週数に応じた適切なアドバイス

### 5. PWA対応指針
- **最優先**
　- manifest.json と icons を用意し、ホーム画面追加ができるようにする。
　- next-pwaなどで最低限のキャッシュを有効化（デフォルト設定でも十分）。
- **余裕があれば**
　- 特定パスや特定ファイルだけはオフラインキャッシュするルールを設定。
　- たとえば「トップページやメインのJS/CSSはキャッシュするが、食事画像のアップロード機能はオンライン必須」など。
- **プッシュ通知**
　- 2週間MVPでは優先度低め。実装のためのService Workerのコードが増え、デバッグも必要。


### 6. コーディング規約
#### 6.1 命名規則
- コンポーネント: PascalCase（例: `MealCard`）
- フック: camelCaseで`use`プレフィックス（例: `useMealLog`）
- 関数: camelCase（例: `calculateNutrition`）


### 7. エラーハンドリング
- ユーザーエラーは日本語で分かりやすく表示
- AI解析エラーは手動入力への切り替えを提案
- ネットワークエラーはオフラインモードを活用

### 8. パフォーマンス最適化
- 画像アップロードは圧縮して転送
- APIレスポンスは適切にキャッシュ
- 不要な再レンダリングを防ぐmemo化

### 9. セキュリティ考慮事項
- Supabase RLSによるデータアクセス制御
- センシティブなデータの暗号化
- JWT認証トークンの適切な管理

### 10. テスト方針
- クリティカルなフローの単体テスト
- 画像解析機能の統合テスト
- モバイル表示のビジュアルレグレッションテスト

### コードレビューのチェックポイント
1. モバイル表示は適切か
2. エラーハンドリングは親切か
3. オフライン動作は考慮されているか
4. パフォーマンスへの影響は最小限か
5. TypeScriptの型は適切か